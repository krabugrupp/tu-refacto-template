openapi: 3.0.3
info:
  title: TU Person API
  version: 1.0.0

servers:
  - url: http://localhost:8080/api/persion

tags:
  - name: person

paths:

  /:
    get:
      tags:
        - person
      summary: Person test
      operationId: getPerson
      responses:
        '200':
          description: Приветствие
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'

  /citizenship:
    get:
      tags:
        - person
      summary: Person citizenship test
      operationId: getCitizenship
      responses:
        '200':
          description: Приветствие
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonCitizenship'



components:
  schemas:
    BankAccount:
      type: object
      properties:
        ownerFirstName:
          type: string
          maxLength: 100
          minLength: 1
        ownerLastName:
          type: string
          maxLength: 100
          minLength: 1
        accountNumber:
          type: string
          maxLength: 34
          minLength: 10

    BankAccountUpdateRequest:
      type: object
      properties:
        ownerFirstName:
          type: string
          maxLength: 100
          minLength: 1
        ownerLastName:
          type: string
          maxLength: 100
          minLength: 1
        accountNumber:
          type: string
          maxLength: 34
          minLength: 10

    ExtendedPerson:
      type: object
      properties:
        dateOfBirth:
          type: string
        personalId:
          type: string
        person:
          $ref: 'person-api.yml#/components/schemas/Person'

    GraphQLQuery:
      type: object
      properties:
        query:
          type: string

    HasExistingAccountResponse:
      type: object
      properties:
        canLogin:
          type: boolean
        hasAccount:
          type: boolean

    Person:
      type: object
      properties:
        firstName:
          type: string
        fullName:
          type: string
        id:
          type: integer
          format: int64
        lastName:
          type: string
        officialEmail:
          type: string
        officialFax:
          type: string
        officialMobile:
          type: string
        officialPhone:
          type: string
        personalPhone:
          type: string
        units:
          type: array
        uuid:
          type: string

    PersonCitizenship:
      type: object
      properties:
        Id:
          type: integer
          description: Tabeli primaarvõti
          nullable: false
        countryCode:
          type: string
          maxLength: 100
          description: Välisriigi isikukood
        countryId:
          type: integer
          description: Mis riigi isikukoodiga tegemist on
          nullable: false
        dateFrom:
          type: string
          format: date
          description: Rea kehtivuse alguse kuupäev
        dateTo:
          type: string
          format: date
          description: Rea kehtivuse lõppkuupäev
        id:
          type: integer
          description: Millise isiku isikukoodiga on tegemist
          nullable: false
        residencePermitDoc:
          type: string
          maxLength: 30
          description: Ei kasutata
        residencePermitFrom:
          type: string
          format: date
          description: Ei kasutata
        residencePermitTo:
          type: string
          format: date
          description: Ei kasutata
        updatedById:
          type: integer
          description: Rea viimase muutja ID_ISIK. Täidetakse logitrigeri poolt
        updatedAt:
          type: string
          format: date
          description: Rea viimase muutmise aeg. Täidetakse logitrigeri poolt
        url:
          type: string
          maxLength: 50
          description: Rea viimase muutmise teinud arvuti IP aadress. Kui muutus tehti baasist, siis ip ja kasutajatunnus

    PersonDetails:
      type: object
      properties:
        bank:
          $ref: '#/components/schemas/BankAccount'
        birthplace:
          $ref: 'util-api.yml#/components/schemas/Address'
        citizenship:
          $ref: 'util-api.yml#/components/schemas/Country'
        dateOfBirth:
          type: string
        origin:
          $ref: 'util-api.yml#/components/schemas/Address'
        personalCode:
          type: string
        sex:
          $ref: 'util-api.yml#/components/schemas/Classificator'

    PersonSearchRequest:
      type: object
      properties:
        isActive:
          type: boolean
        isEmployee:
          type: boolean
        isStudent:
          type: boolean
        internal:
          type: boolean
        jobTitle:
          $ref: 'util-api.yml#/components/schemas/Translations'
        name:
          type: string
          maxLength: 40
          minLength: 2
        start:
          type: integer
          minimum: 1
        structuralUnits:
          type: array
        studyLevel:
          $ref: 'util-api.yml#/components/schemas/Classificator'
        studyType:
          $ref: 'util-api.yml#/components/schemas/Classificator'
        take:
          type: integer
          minimum: 1
          maximum: 300
        uuids:
          type: array

    PersonUnitJob:
      type: object
      properties:
        jobCategory:
          $ref: 'util-api.yml#/components/schemas/Translations'
        jobTitle:
          $ref: 'util-api.yml#/components/schemas/Translations'
        structuralUnitCode:
          type: string
        structuralUnitName:
          $ref: 'util-api.yml#/components/schemas/Translations'

    UserAccountInfo:
      type: object
      properties:
        accounts:
          type: array
        emailAddresses:
          type: array
        lastPasswordChange:
          type: string
          format: date-time
        storage:
          $ref: '#/components/schemas/UserStorage'
        username:
          type: string

    UserAccountPeriod:
      type: object
      properties:
        sinceDateTime:
          type: string
          format: date-time
        untilDateTime:
          type: string
          format: date-time
        username:
          type: string

    UserStorage:
      type: object
      properties:
        limitHardKb:
          type: integer
          format: int32
        limitSoftKb:
          type: integer
          format: int32
        usedKb:
          type: integer
          format: int32

    WorkContract:
      type: object
      properties:
        signingDate:
          type: string
          format: date
        number:
          type: string
        start:
          type: string
          format: date
        end:
          type: string
          format: date

