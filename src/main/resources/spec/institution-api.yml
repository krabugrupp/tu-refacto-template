openapi: 3.0.3
info:
  title: TU institution API
  version: 1.0.0

servers:
  - url: http://localhost:8080/api/edu-institution

tags:
  - name: edu-institution

paths:

  /:
    get:
      tags:
        - edu-institution
      summary: Get all educational institutions
      operationId: getAllEducationalInstitutions
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EduInstitution'
        '400':
          description: Request parameter or payload contains an invalid value.

  /{id}:
    get:
      tags:
        - edu-institution
      summary: Get educational institution by ID
      operationId: getEducationalInstitutionById
      parameters:
        - name: id
          in: path
          description: ID of the educational institution
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EduInstitution'
        '400':
          description: Request parameter or payload contains an invalid value.

  /et:
    get:
      tags:
        - edu-institution
      summary: Get educational institution names in Estonian
      operationId: getEducationalInstitutionNamesInEstonian
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: object
                additionalProperties:
                  type: string
        '400':
          description: Request parameter or payload contains an invalid value.

  /en:
    get:
      tags:
        - edu-institution
      summary: Get educational institution names in English
      operationId: getEducationalInstitutionNamesInEnglish
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: object
                additionalProperties:
                  type: string
        '400':
          description: Request parameter or payload contains an invalid value.

  /search:
    post:
      tags:
        - edu-institution
      summary: Search for educational institutions
      operationId: searchEducationalInstitutions
      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/EduInstitutionSearchRequest'
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EduInstitution'
        '400':
          description: Request parameter or payload contains an invalid value.


components:
  schemas:
    ContractSuspension:
      type: object
      properties:
        absenceStatus:
          type: integer
          format: int32
        end:
          type: string
        isNotVacation:
          type: boolean
        start:
          type: string
        suspensionLength:
          type: integer
          format: int32
        type:
          $ref: 'util-api.yml#/components/schemas/Classificator'
    Degree:
      type: object
      properties:
        abbreviation:
          $ref: 'util-api.yml#/components/schemas/Translations'
        attributedAt:
          type: string
        attributingInstitution:
          type: string
        axaptaType:
          $ref: 'util-api.yml#/components/schemas/Classificator'
        name:
          type: string
        speciality:
          $ref: 'util-api.yml#/components/schemas/Translations'
        type:
          $ref: 'util-api.yml#/components/schemas/Classificator'
        vocation:
          type: string
    Education:
      type: object
      properties:
        degree:
          $ref: '#/components/schemas/Degree'
        documentNumber:
          type: string
        duration:
          $ref: '#/components/schemas/StudyDuration'
        formHigher:
          $ref: 'util-api.yml#/components/schemas/Classificator'
        formSecondary:
          $ref: 'util-api.yml#/components/schemas/Classificator'
        institution:
          $ref: '#/components/schemas/EduInstitution'
        isCumLaude:
          type: boolean
        medal:
          $ref: 'util-api.yml#/components/schemas/Classificator'
        studyLevel:
          $ref: 'util-api.yml#/components/schemas/Classificator'
        studyType:
          $ref: 'util-api.yml#/components/schemas/Classificator'
    EduInstitution:
      type: object
      properties:
        erasmusCode:
          type: string
        id:
          type: integer
          format: int32
        name:
          $ref: 'util-api.yml#/components/schemas/Translations'
        originalName:
          type: string
        websiteUrl:
          type: string
        yearClosed:
          type: integer
          format: int32
    EduInstitutionSearchRequest:
      type: object
      properties:
        category:
          $ref: 'util-api.yml#/components/schemas/Classificator'
        erasmusCode:
          type: string
          maxLength: 40
          minLength: 2
        name:
          type: string
          maxLength: 40
          minLength: 2
        nameEn:
          type: string
          maxLength: 40
          minLength: 2
        start:
          type: integer
          minimum: 1
        take:
          type: integer
          minimum: 1
          maximum: 300
        type:
          $ref: 'util-api.yml#/components/schemas/Classificator'
    WorkRelation:
      type: object
      properties:
        beginning:
          type: string
        category:
          $ref: 'util-api.yml#/components/schemas/Classificator'
        contract:
          $ref: 'person-api.yml#/components/schemas/WorkContract'
        end:
          type: string
        joblevelId:
          type: string
        load:
          type: number
        note:
          type: string
        phone:
          type: string
        speciality:
          type: string
        state:
          $ref: 'util-api.yml#/components/schemas/Classificator'
        structuralUnit:
          $ref: 'util-api.yml#/components/schemas/StructuralUnit'
        suspensions:
          type: array
          items:
            $ref: '#/components/schemas/ContractSuspension'
        task:
          $ref: 'util-api.yml#/components/schemas/Classificator'
        title:
          $ref: 'util-api.yml#/components/schemas/Translations'
