import org.openapitools.generator.gradle.plugin.tasks.GenerateTask;

plugins {
	id 'java'
	id 'idea'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.openapi.generator' version '6.6.0'

}

springBoot {
	mainClass = 'ee.tu.app.TuAppApplication'
}
group = 'ee.tu.app'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'


	implementation 'org.liquibase:liquibase-core'



	//Swagger 3  not springfox
	// exclude swagger annotation and use newer version due conflicts with avro serializer
	implementation ('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0') {
		exclude group: "io.swagger.core.v3", module:"swagger-annotations"
	}
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.15'

	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	// Exclude SLF4J to prevent multiple binding errors
	implementation ('org.openapitools:openapi-generator:7.3.0') {
		exclude group: 'org.slf4j', module: 'slf4j-simple'
	}


	// Open api
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'javax.servlet:javax.servlet-api:3.0.1'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.1'
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

	// Graphql
	implementation 'org.springframework.boot:spring-boot-starter-graphql'

	// Lombok
	// https://mvnrepository.com/artifact/org.projectlombok/lombok
	compileOnly 'org.projectlombok:lombok:1.18.30'


	// Docker database on startup
	//developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework:spring-webflux'
	testImplementation 'org.springframework.graphql:spring-graphql-test'

}

sourceSets {
	main {
		java {
			srcDirs "src/main/java", "$buildDir/generated/api/src/main/java"
		}
	}
}

task generatePersonApi (type: GenerateTask) {
	getGeneratorName().set("spring")

	getInputSpec().set("$projectDir/src/main/resources/spec/person-api.yml")
	getOutputDir().set("$buildDir/generated/api".toString())
	getApiPackage().set("ee.tu.app.api")
	getModelPackage().set("ee.tu.app.api.model")
	getModelNamePrefix().set("XR")
	getSkipValidateSpec().set(false)
	getApiFilesConstrainedTo().set([""])
	getModelFilesConstrainedTo().set([""])
	getSupportingFilesConstrainedTo().set(["ApiUtil.java"])
	getConfigOptions().set([
	        generateSupportingFiles: "false",
			dateLibrary: "java8",
			delegatePattern: "true",
			title: "tu-app",
			useTags: "true",
			oas3: "true",
			useSpringController: "true",
			useSpringfox: "false",
			userSpringBoot3: "true"
	])
}
task generateUtilApi (type: GenerateTask) {
	getGeneratorName().set("spring")

	getInputSpec().set("$projectDir/src/main/resources/spec/util-api.yml")
	getOutputDir().set("$buildDir/generated/api".toString())
	getApiPackage().set("ee.tu.app.api")
	getModelPackage().set("ee.tu.app.api.model")
	getModelNamePrefix().set("XR")
	getSkipValidateSpec().set(false)
	getApiFilesConstrainedTo().set([""])
	getModelFilesConstrainedTo().set([""])
	getSupportingFilesConstrainedTo().set(["ApiUtil.java"])
	getConfigOptions().set([
			generateSupportingFiles: "false",
			dateLibrary: "java8",
			delegatePattern: "true",
			title: "tu-app",
			useTags: "true",
			oas3: "true",
			useSpringController: "true",
			useSpringfox: "false",
			userSpringBoot3: "true"
	])
}
task generateInstitutionApi (type: GenerateTask) {
	getGeneratorName().set("spring")

	getInputSpec().set("$projectDir/src/main/resources/spec/institution-api.yml")
	getOutputDir().set("$buildDir/generated/api".toString())
	getApiPackage().set("ee.tu.app.api")
	getModelPackage().set("ee.tu.app.api.model")
	getModelNamePrefix().set("XR")
	getSkipValidateSpec().set(false)
	getApiFilesConstrainedTo().set([""])
	getModelFilesConstrainedTo().set([""])
	getSupportingFilesConstrainedTo().set(["ApiUtil.java"])
	getConfigOptions().set([
			generateSupportingFiles: "false",
			dateLibrary: "java8",
			delegatePattern: "true",
			title: "tu-app",
			useTags: "true",
			oas3: "true",
			useSpringController: "true",
			useSpringfox: "false",
			userSpringBoot3: "true"
	])
}


tasks.named('test') {
	useJUnitPlatform()
}


compileJava.dependsOn generatePersonApi
compileJava.dependsOn generateInstitutionApi
compileJava.dependsOn generateUtilApi

